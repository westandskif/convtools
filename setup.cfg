[metadata]
name = convtools
version = 0.17.0
description = convtools allows to define and reuse conversions for processing collections and csv tables, complex aggregations and joins.
author = Nikita Almakov
author_email = nikita.almakov@gmail.com
license = mit
project-urls =
	Documentation = https://convtools.readthedocs.io/en/latest/
    Source = https://github.com/westandskif/convtools
    Bug Reports = https://github.com/westandskif/convtools/issues
long-description = file: README.rst
long-description-content-type = text/x-rst; charset=UTF-8
platforms = any
classifiers =
	Development Status :: 4 - Beta
	Intended Audience :: Developers
	License :: OSI Approved :: MIT License
	Operating System :: OS Independent
	Programming Language :: Python
	Programming Language :: Python :: 3 :: Only
	Programming Language :: Python :: 3.6
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Topic :: Software Development :: Code Generators
	Topic :: Software Development :: Libraries
	Topic :: Software Development :: Libraries :: Python Modules
	Topic :: Utilities

[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =src
python_requires = >=3.6

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
testing =
    pytest
    pytest-cov
	towncrier
	sphinx
	flake8

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = convtools.module:function

[test]
# py.test options when running `python setup.py test`
# addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov convtools --cov-report term-missing --cov-report xml
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests

[aliases]
dists = bdist_wheel

[bdist_wheel]
# Use this option if your package is pure-python
universal = 0

[build_sphinx]
source_dir = docs
build_dir = build/sphinx

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
