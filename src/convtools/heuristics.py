"""
This module is to contain helpers, which collect info about python code
execution
"""
import os
import sys
from timeit import Timer


class CustomTimer(Timer):
    def autorange(self, min_time_taken):
        i = 1
        while True:
            for j in 1, 2, 5:
                number = i * j
                time_taken = self.timeit(number)
                if time_taken >= min_time_taken:
                    return (number, time_taken)
            i *= 10


def print_new_weights():  # pragma: no cover

    config = {
        "LOGICAL": CustomTimer("x or y", "x=0; y=1"),
        "DICT_LOOKUP": CustomTimer("d['abc']", "d = {'abc': 1}"),
        "MATH_SIMPLE": CustomTimer("x / y", "x=1;y=2"),
        "ATTR_LOOKUP": CustomTimer("A.b", "class A: b = 1"),
        "TUPLE_INIT": CustomTimer("(x,2,3,4,5)", "x=1"),
        "LIST_INIT": CustomTimer("[1,2,3,4,5]"),
        "SET_INIT": CustomTimer("{1,2,3,4,5}"),
        "DICT_INIT": CustomTimer("{'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5}"),
    }
    print("# CALCULATING BASE TIME")
    total_iterations, total_time = CustomTimer("'abc'").autorange(5)
    base_time = total_time / total_iterations / 100

    print(f"#{'.'.join(map(str, sys.version_info[:3]))}")
    print(
        "class Weights:  #type: ignore # pragma: no cover # pylint: disable=missing-class-docstring # noqa: F811"
    )
    print(f"    # base_time: {base_time}")
    print("    STEP = 100")

    max_it = 1
    for name, timer in config.items():
        iterations, time_taken = timer.autorange(1)
        it = int(time_taken / iterations / base_time)
        print(f"    {name} = {it}")
        max_it = max(max_it, it)

    print("    FUNCTION_CALL = DICT_LOOKUP * 4")
    print(f"    UNPREDICTABLE = {max_it * 100}")


if os.environ.get("BUILD_HEURISTICS"):
    print_new_weights()  # pragma: no cover

# generated by print_new_weights function:
#   from convtools.heuristics import print_new_weights

PY_VERSION = sys.version_info[0:2]
if PY_VERSION <= (3, 6):

    # 3.6.15
    class Weights:  # type: ignore # pragma: no cover # pylint: disable=missing-class-docstring # noqa: F811
        # base_time: 4.0131668955436906e-11
        STEP = 100
        LOGICAL = 252
        DICT_LOOKUP = 327
        MATH_SIMPLE = 378
        ATTR_LOOKUP = 345
        TUPLE_INIT = 543
        LIST_INIT = 681
        SET_INIT = 1725
        DICT_INIT = 1746
        FUNCTION_CALL = DICT_LOOKUP * 4
        UNPREDICTABLE = 174600

elif PY_VERSION <= (3, 7):  # pragma: no cover

    # 3.7.16
    class Weights:  # type: ignore # pragma: no cover # pylint: disable=missing-class-docstring # noqa: F811
        # base_time: 4.080330146e-11
        STEP = 100
        LOGICAL = 236
        DICT_LOOKUP = 337
        MATH_SIMPLE = 365
        ATTR_LOOKUP = 319
        TUPLE_INIT = 526
        LIST_INIT = 657
        SET_INIT = 1643
        DICT_INIT = 1695
        FUNCTION_CALL = DICT_LOOKUP * 4
        UNPREDICTABLE = 169500

elif PY_VERSION == (3, 8):  # pragma: no cover

    # 3.8.16
    class Weights:  # type: ignore # pragma: no cover # pylint: disable=missing-class-docstring # noqa: F811
        # base_time: 4.104652208499999e-11
        STEP = 100
        LOGICAL = 227
        DICT_LOOKUP = 321
        MATH_SIMPLE = 372
        ATTR_LOOKUP = 311
        TUPLE_INIT = 537
        LIST_INIT = 680
        SET_INIT = 1689
        DICT_INIT = 1704
        FUNCTION_CALL = DICT_LOOKUP * 4
        UNPREDICTABLE = 170400

elif PY_VERSION == (3, 9):  # pragma: no cover

    # 3.9.7
    class Weights:  # type: ignore # pragma: no cover # pylint: disable=missing-class-docstring # noqa: F811
        # base_time: 4.018004396e-11
        STEP = 100
        LOGICAL = 242
        DICT_LOOKUP = 357
        MATH_SIMPLE = 402
        ATTR_LOOKUP = 332
        TUPLE_INIT = 602
        LIST_INIT = 747
        SET_INIT = 1430
        DICT_INIT = 1953
        FUNCTION_CALL = DICT_LOOKUP * 4
        UNPREDICTABLE = 195300

elif PY_VERSION == (3, 10):  # pragma: no cover

    # 3.10.9
    class Weights:  # type: ignore # pragma: no cover # pylint: disable=missing-class-docstring # noqa: F811
        # base_time: 4.078415354015305e-11
        STEP = 100
        LOGICAL = 206
        DICT_LOOKUP = 307
        MATH_SIMPLE = 368
        ATTR_LOOKUP = 304
        TUPLE_INIT = 571
        LIST_INIT = 679
        SET_INIT = 1445
        DICT_INIT = 1822
        FUNCTION_CALL = DICT_LOOKUP * 4
        UNPREDICTABLE = 182200

else:

    # 3.11.1
    class Weights:  # type: ignore # pragma: no cover # pylint: disable=missing-class-docstring # noqa: F811
        # base_time: 4.269156000053045e-11
        STEP = 100
        LOGICAL = 177
        DICT_LOOKUP = 312
        MATH_SIMPLE = 343
        ATTR_LOOKUP = 285
        TUPLE_INIT = 532
        LIST_INIT = 672
        SET_INIT = 1382
        DICT_INIT = 2115
        FUNCTION_CALL = DICT_LOOKUP * 4
        UNPREDICTABLE = 211500
